
--1. NOT NULL 
--: NULL값을 막아 주지만, 중복 저장됨.

-- 2. UNIQUE
--: 중복저장을 막아주지만 NULL값 입력됨.
drop table emp03;
CREATE TABLE EMP03(
-- UNIQUE의 CONSTRAINT NAME: SYS_C007018
EMPNO NUMBER(4) UNIQUE, -- UNIQUE로 지정
ENAME VARCHAR2(10) NOT NULL,
JOB VARCHAR2(9),
DEPTNO NUMBER(2)
);

SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;

INSERT INTO EMP03
VALUES(7499, 'ALLEN', 'SALESMAN', 30);
--7499를 2번째 등록하면 unique vihlence에 의해서 등록할 수 없음.
INSERT INTO EMP03
VALUES(7499, 'ALLEN', 'SALESMAN', 30);
-- SYS_C007018는 오라클에서 자동 생성한 CONSTRAINT NAME임.

-- unique로 설정된 empno는 null 값 받음
-- unique로 설정된 널 값을 입력 받을수 있음
-- 오라클에서 널은 정해지지 않은 수 임
INSERT INTO EMP03
VALUES(NULL, 'JONES', 'MANAGER', 20);
INSERT INTO EMP03
VALUES(NULL, 'JONES', 'SALESMAN', 10);

select * from emp03;

--
DROP TABLE EMP04;

CREATE TABLE EMP04(
EMPNO NUMBER(4) CONSTRAINT EMP04_EMPNO_UK UNIQUE, 
--EMPNO NUMBER(4) CONSTRAINT + CONSTRAINT이름 + CONSTRAINT타입(UNIQUE)
ENAME VARCHAR2(10) CONSTRAINT EMP04_ENAME_NN NOT NULL,
JOB VARCHAR2(9),
DEPTNO NUMBER(2)
);
INSERT INTO EMP04
VALUES(7499, 'ALLEN', 'SALESMAN', 30);
-- 같은 EMPNO 입력함.
INSERT INTO EMP04
VALUES(7499, 'JONES', 'MANAGER', 20);
--ERROR : unique constraint (MADANG.EMP04_EMPNO_UK) violated --> EMPNO_UK로 분별가능
SELECT * FROM EMP04;


-- 3. PRIMARY KEY
DROP TABLE EMP05;

CREATE TABLE EMP05(
EMPNO NUMBER(4) CONSTRAINT EMP05_EMPNO_PK PRIMARY KEY ,
ENAME VARCHAR2(10) CONSTRAINT EMP05_ENAME_NN NOT NULL,
JOB VARCHAR2(9),
DEPTNO NUMBER(2)
); 
DESC EMP05;
-- PRIMARY KEY를 지정하면 UNIQUE로 지정됨.
-- NULL값 입력 불가, 같은 값 입력 불가.
INSERT INTO EMP05
VALUES(7499, 'ALLEN', 'SALESMAN', 30);
INSERT INTO EMP05
VALUES(7499, 'JONES', 'MANAGER', 20);
--ERROR:  unique constraint (MADANG.EMP05_EMPNO_PK) violated
INSERT INTO EMP05
VALUES(NULL, 'JONES', 'MANAGER', 20);
--ERROR: cannot insert NULL into ("MADANG"."EMP05"."EMPNO")

SELECT * FROM EMP05;

--4. FOREIGN KEY

DROP TABLE EMP06;

CREATE TABLE EMP06(
EMPNO NUMBER(4)
CONSTRAINT EMP06_EMPNO_PK PRIMARY KEY ,
ENAME VARCHAR2(10)
CONSTRAINT EMP06_ENAME_NN NOT NULL,
JOB VARCHAR2(9),
DEPTNO NUMBER(2)
CONSTRAINT EMP06_DEPTNO_FK REFERENCES DEPT(DEPTNO) 
-- CONSTRAINT CONSTRAINT이름 + REFERENCES + 부모DEPT(DEPTNO) 
); 
DESC EMP06;

INSERT INTO EMP06
VALUES(7499, 'ALLEN', 'SALESMAN', 30);
INSERT INTO EMP06
VALUES(7566, 'JONES', 'MANAGER', 50); -- deptno는 50이 없음
-- 부모가 없는 상태에서 INSERT 하면 에러 발생함.
--ERROR: integrity constraint (MADANG.EMP06_DEPTNO_FK) violated - parent key not found 
--부모에서 키를 찾을 수 없음

SELECT * FROM EMP06;

--5. CHECK
DROP TABLE EMO07;
CREATE TABLE EMP07(
EMPNO NUMBER(4) CONSTRAINT EMP07_EMPNO_PK PRIMARY KEY ,
ENAME VARCHAR2(10) CONSTRAINT EMP07_ENAME_NN NOT NULL,
SAL NUMBER(7, 2) CONSTRAINT EMP07_SAL_CK CHECK(SAL BETWEEN 500 AND 5000),
                                        -- SAL 은 500~5000 범위 값을 갖음
GENDER VARCHAR2(1) CONSTRAINT EMP07_GENDER_CK CHECK (GENDER IN('M', 'F'))
                                        -- GENDER는 M,F 값만 갖을 수 있음
);
DESC EMP07;

INSERT INTO EMP07
VALUES(7499, 'ALLEN', 200, 'M');
--ERROR : check constraint (MADANG.EMP07_SAL_CK) violated
--  SAL은 500~5000범위 값만 갖을 수 있음
INSERT INTO EMP07
VALUES(7499, 'ALLEN', 2000, 'A');
--ERROR: check constraint (MADANG.EMP07_GENDER_CK) violated 
-- GENDER는 M,F 값만 갖을 수 있음

SELECT * FROM EMP07;

--6. DEFAULT
DROP TABLE DEPT01;

CREATE TABLE DEPT01(
DEPTNO NUMBER(2) PRIMARY KEY,
DNAME VARCHAR2 (14),
LOC VARCHAR2(13) DEFAULT 'SEOUL'
);
DESC DEPT01;
INSERT INTO DEPT01(DEPTNO, DNAME)
VALUES(10, 'ACCOUNTING');

SELECT * FROM DEPT01;

--7. 테이블 레벨 방식
-- EMP01 속성 지정 방법
CREATE TABLE EMP01(
EMPNO NUMBER(4) PRIMARY KEY,
ENAME VARCHAR2(10) NOT NULL,
JOB VARCHAR2(9) UNIQUE,
DEPTNO NUMBER(4) REFERENCES DEPT(DEPTNO)
); 

DROP TABLE EMP02;

CREATE TABLE EMP02(
    EMPNO NUMBER(4),
    ENAME VARCHAR2(10) NOT NULL, -- NOT NULL 제약조건을 COLUMN 레벨로만 지정 가능하미
    JOB VARCHAR2(9),
    DEPTNO NUMBER(4),
--TABLE 레벨 제약조건 지정 방법
PRIMARY KEY(EMPNO),
UNIQUE(JOB),
FOREIGN KEY(DEPTNO) REFERENCES DEPT(DEPTNO)
);
DESC EMP02;
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;

--
DROP TABLE EMP03;

CREATE TABLE EMP03(
    EMPNO NUMBER(4) CONSTRAINT EMP03_ENAME_NN NOT NULL,
    ENAME VARCHAR2(10),
    JOB VARCHAR2(9),
    DEPTNO NUMBER(4),
CONSTRAINT EMP03_EMPNO_PK PRIMARY KEY(EMPNO),
CONSTRAINT EMP03_JOB_UK UNIQUE(JOB),
CONSTRAINT EMP03_DEPTNO_FK FOREIGN KEY(DEPTNO) REFERENCES DEPT(DEPTNO)
); 
DESC EMP03;
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;

--복합키 COMPOSITE KEY 지정 : PRIMARY KEY 가 여러개인 키
CREATE TABLE MEMBER01(
    NAME VARCHAR2(10),
    ADDRESS VARCHAR2(30),
    HPHONE VARCHAR2(16),
CONSTRAINT MEMBER01_COMBO_PK PRIMARY KEY(NAME, HPHONE) -- 복합키
);

SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;
SELECT * FROM USER_CONS_COLUMNS WHERE TABLE_NAME = 'MEMBER01'; 


--ALTER TABLE에 ADD COLUMN 명령어로 constraint 추가 방법
DROP TABLE EMP01;

CREATE TABLE EMP01(
EMPNO NUMBER(4), -- PRIMARY KEY
ENAME VARCHAR2(10), -- NOT NULL
JOB VARCHAR2(9),
DEPTNO NUMBER(4) -- FOREIGN KEY
); -- 제약조건이 아무것도 없음

ALTER TABLE EMP01
ADD CONSTRAINT EMP01_EMPNO_PK PRIMARY KEY(EMPNO); -- PRIMARY KEY 제약조건 추가하기.

ALTER TABLE EMP01
ADD CONSTRAINT EMP01_DEPTNO_FK 
FOREIGN KEY(DEPTNO) REFERENCES DEPT(DEPTNO); -- FOREIGN KEY 제약조건 추가하기.

ALTER TABLE EMP01
MODIFY ENAME CONSTRAINT EMP01_ENAME_NN NOT NULL; -- NOT NULL에 대해서는 MODIFY를 사용해 설정해야함.

SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;

--8. 제약조건 제거하기
ALTER TABLE EMP05
DROP CONSTRAINT EMP05_EMPNO_PK; -- 기본키 제거

/*
--9. 제약 조건의 비활성화

회사에서 DB와 관련된 새로운 시스템 개발을 하다보면 
예를들어 한국지원 쇼핑몰 시스템 어플리케이션을 --> 전 세계버전 웹어플리케이션으로 확장함
1. DATA MIGRATION
  - 기존 어플리케이션에서 사용하던 데이터 테이블과 테이블 안의 데이터를 새로운 어플리케이션의 테이블에 옮겨야할 때.
   EMP(ENAME : NOT NULL)이 아닐 때, 새로운 시스템엔 ENAME이 NOT  NULL이면 MIGRATION하면 에러가 발생함.
   
   --> MIGRATION을 위해 새로운 시스템의 EMP의 ENAMEDL NOT NULL로 들어가는 것을 비활성화 시켜줌.
*/

------------------------------------
DROP TABLE EMP0;
DESC EMP0;
SELECT * FROM EMP03;
--
DROP TABLE DEPT0;
DESC DEPT0;
SELECT * FROM DEPT0;
--
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME FROM USER_CONSTRAINTS;
